1. Escreva uma função que verifique se uma dada sequência
seq[0..k] de vértices de um grafo é um caminho. A função
devolve 1 caso a sequencia seja um caminho e 0 caso contrário.
Faça duas versões do método:supõe que o grafo dado por sua
matriz de adjacência e outra supõe que o grafo é dado por listas
de adjacência.

2. Escreva uma função que verifique se uma dada sequência
seq[0..k] de vértices de um grafo é um caminho simples. A
função devolve 1 caso a sequencia seja um caminho e 0 caso
contrário. Faça duas versões do método:supõe que o grafo dado
por sua matriz de adjacência e outra supõe que o grafo é dado
por listas de adjacência.

DFS

3) Dados vértices s e t de um grafo G, escreva uma função que
retorna 1 se existe um caminho ou 0 se não existe um caminho
de s a t em G. Faça duas versões: uma supõe que o grafo é
dado por sua matriz de adjacência e outra supõe que o grafo
é dado por listas de adjacência.

4) Dados vértices s e t de um grafo G, escreva uma função que
encontra e exibe (caso exista) um caminho de s a t. Faça duas
versões da função: uma supõe que o grafo é dado por sua matriz
de adjacência e outra supõe que o grafo é dado por listas de
adjacência.

5) Escreva uma versão iterativa para a busca em profundidade
para grafos representados por uma matriz de adjacência e por
uma listas de adjacência. Dica utilize uma pilha como estrutura
auxiliar.

DFS tempo

Escreva um método receba dois vértices v e w em V (G), e ve-
rifique se existe um arco v − w em G. Caso positivo devolva
a classificação do arco (arborescência, descendente, retorno ou
cruzado).

Escreva um método que verifica se um dado digrafo contém um
ciclo. O método devolve 1 se existe um ciclo e devolve 0 em
caso contrário.
Implemente a detecção do ciclo utilizando a função de caminho.

Exercício
Escreva um método que verifica se um dado digrafo contém um
ciclo. O método devolve 1 se existe um ciclo e devolve 0 em caso
contrário. Escreva o algoritmo recursivo e o algoritmo iterativo.
Implemente a detecção do ciclo utilizando pilhas.

Escreva um método que verifica se um dado digrafo contém um
ciclo. O método devolve 1 se existe um ciclo e devolve 0 em
caso contrário.
Implemente a detecção do ciclo utilizando classificação de arcos.

Escreva um método que verifica se um dado digrafo contém um
ciclo. O método devolve 1 se existe um ciclo e devolve 0 em
caso contrário.
Implemente a detecção do ciclo utilizando cores.

Implemente o algoritmo de ordenação topológica utilizando busca
em profundidade.


Exercício

a) Apresente o subgrafo G′
1 de G induzido por
V ′ = {a, b, c, d, e, f }.
b) Apresente o subgrafo G′
2 de G aresta-induzido por
E′ = {{a, g}, {b, g}, {c, g}, {d, g}, {e, g}, {f, g}}.

2. Dado um grafo não orientado G = (V, E), escreva um método
que receba um grafo G1 = (V, E) e devolva verdadeiro se G1 ⊆ G,
e falso caso contrário.
3. Dado um grafo não orientado G = (V, E), escreva um método
que receba um grafo G1 = (V, E) e devolva verdadeiro se G1 é
um subgrafo gerador de G, e falso caso contrário.
4. Dado um grafo não orientado G = (V, E), escreva um método
que receba um conjunto de vértices V ′ ∈ V e devolva um grafo
induzido por V ′. Caso não seja possível gerar o grafo induzido,
apresente uma mensagem de erro.
5. Dado um grafo não orientado, construa um método que
devolve o número de componentes de G.
6. Dado um grafo não orientado, utilize o método que devolve
o número de componentes do grafo construído no exercício an-
terior para construir um outro método que devolva verdadeiro se
o grafo é conexo e falso caso o grafo seja desconexo

Dado o digrafo D = (V, E) a seguir determinar os componentes
fortemente conexos utilizando o algoritmo de Kosaraju:

Exercício coloracao bipartido